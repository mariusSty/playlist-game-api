// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String  @id @default(uuid())
  name        String?
  room        Room?   @relation("users", fields: [roomId], references: [id])
  roomId      Int?
  roomHost    Room?   @relation("host")
  roomHostId  Int?
  picks       Pick[]  @relation("pick")
  guessed     Vote[]  @relation("guessed")
  guesses     Vote[]  @relation("guesses")
  themeMaster Round?  @relation("themeMaster")
}

model Room {
  id     Int    @id @default(autoincrement())
  pin    String @unique
  users  User[] @relation("users")
  host   User   @relation("host", fields: [hostId], references: [id])
  hostId String @unique
  games  Game[]
}

model Game {
  id         Int     @id @default(autoincrement())
  roomId     Int     @unique
  room       Room    @relation(fields: [roomId], references: [id])
  rounds     Round[]
  isFinished Boolean @default(false)
}

model Round {
  id            Int    @id @default(autoincrement())
  gameId        Int
  game          Game   @relation(fields: [gameId], references: [id])
  picks         Pick[]
  themeMaster   User   @relation("themeMaster", fields: [themeMasterId], references: [id])
  themeMasterId String @unique
  theme         String
}

model Pick {
  id      Int    @id @default(autoincrement())
  round   Round  @relation(fields: [roundId], references: [id])
  roundId Int
  song    String
  user    User   @relation("pick", fields: [userId], references: [id])
  userId  String
  votes   Vote[]

  @@unique([roundId, userId])
}

model Vote {
  id            Int    @id @default(autoincrement())
  pick          Pick   @relation(fields: [pickId], references: [id])
  pickId        Int
  guessedUser   User   @relation("guessed", fields: [guessedUserId], references: [id])
  guessedUserId String
  guessUser     User   @relation("guesses", fields: [guessUserId], references: [id])
  guessUserId   String

  @@unique([pickId, guessUserId])
}
