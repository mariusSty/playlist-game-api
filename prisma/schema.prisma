// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id      String  @id @default(uuid())
  name    String?
  room    Room?   @relation(fields: [roomId], references: [id])
  roomId  Int?
  isHost  Boolean @default(false)
  Pick    Pick[]
  Guessed Guess[] @relation("guessedUser")
  Guess   Guess[] @relation("guessUser")
}

model Room {
  id    Int    @id @default(autoincrement())
  pin   String @unique
  users User[]
  Game  Game[]
}

model Game {
  id         Int     @id @default(autoincrement())
  roomId     Int
  room       Room    @relation(fields: [roomId], references: [id])
  isFinished Boolean @default(false)
  Round      Round[]
}

model Round {
  id         Int     @id @default(autoincrement())
  gameId     Int
  game       Game    @relation(fields: [gameId], references: [id])
  themeId    Int
  theme      Theme   @relation(fields: [themeId], references: [id])
  isFinished Boolean @default(false)
  stepId     Int
  step       Step    @relation(fields: [stepId], references: [id])
  Pick       Pick[]
  Guess      Guess[]
}

model Theme {
  id              Int     @id @default(autoincrement())
  description     String
  isCreatedByUser Boolean @default(false)
  Round           Round[]
}

model Song {
  id     Int     @id @default(autoincrement())
  title  String
  artist String
  url    String
  Pick   Pick[]
  Guess  Guess[]
}

model Pick {
  id      Int    @id @default(autoincrement())
  round   Round  @relation(fields: [roundId], references: [id])
  roundId Int
  song    Song   @relation(fields: [songId], references: [id])
  songId  Int
  user    User   @relation(fields: [userId], references: [id])
  userId  String
}

model Guess {
  id            Int    @id @default(autoincrement())
  round         Round  @relation(fields: [roundId], references: [id])
  roundId       Int
  song          Song   @relation(fields: [songId], references: [id])
  songId        Int
  guessedUser   User   @relation(fields: [guessedUserId], references: [id], name: "guessedUser")
  guessedUserId String
  guessUser     User   @relation(fields: [guessUserId], references: [id], name: "guessUser")
  guessUserId   String
}

model Step {
  id    Int     @id @default(autoincrement())
  name  String
  Round Round[]
}
